cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90 # для того, чтобы Maven не съел всю свободную оперативку
  SPRING_FLYWAY_ENABLED: "false"

stages:
  - build
  - notify
  - release
  - deploy

build-backend-report-code-job:
  stage: build  
  rules: 
    - changes:
      - backend/**/*
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
  script:
    - echo "test"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend-report"
      --dockerfile "${CI_PROJECT_DIR}/backend-report/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/sausage-backend-report:$VERSION"
      --build-arg VERSION=$VERSION
      --cache=true

  artifacts:
    paths:
      - backend-report/target/sausage-store-report-${VERSION}.tar
      - ${CI_PROJECT_DIR}/.m2/ 


telegram-notification-backend:
  stage: notify
  only:
    changes:
    - backend/*
  script:
    - curl -s -X POST https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage 
      -d parse_mode=markdown
      -d chat_id=-1001771539978 
      -d text="std-022-024 собрал backend [artefact]($CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-backend-code-job)"
  needs:
    - build-backend-report-code-job

# release:
#   variables:
#     GIT_STRATEGY: none
#   image:
#     name: gcr.io/go-containerregistry/crane:debug
#     entrypoint: [ "" ]
#   cache: [ ]
#   stage: release
#   before_script:
#     - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#   script:
#     - crane tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA latest


# deploy-backend:
#   stage: deploy
#   image: alpine:3.18
#   before_script:
#     - apk add openssh-client bash envsubst
#     - eval $(ssh-agent -s)
#     - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#   script:
#   # подставим переменные в скрипт deploy.sh и выполним его на целевом хосте, где развернем сосисочный бэкенд    
#     - envsubst < ./backend/deploy.sh|ssh ${DEV_USER}@${DEV_HOST} 
