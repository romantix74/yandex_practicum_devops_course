version: "3.3"

services:
  backend-blue:
    image: ${DOCKER_REGISTRY}/sausage-backend:${VERSION:-latest}
    container_name: backend-blue
    environment:
      # Переменные из application.properties можно заменить переменными окружения
      SPRING_DATASOURCE_USERNAME: "${SPRING_DATASOURCE_USERNAME}"
      SPRING_DATASOURCE_PASSWORD: "${SPRING_DATASOURCE_PASSWORD}"
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL}" #jdbc:postgresql://${SPRING_DATASOURCE_HOST}:${SPRING_DATASOURCE_PORT}/${SPRING_DATASOURCE_DATABASE}
      SPRING_FLYWAY_BASELINE-ON-MIGRATE: "true"
      SPRING_DATA_MONGODB_URI: "${SPRING_DATA_MONGODB_URI}"
      VIRTUAL_HOST: sausage-store
    networks:
      - sausage-store
    restart: on-failure

  backend-green:
    image: ${DOCKER_REGISTRY}/sausage-backend:${VERSION:-latest}
    container_name: backend-green
    environment:
      # Переменные из application.properties можно заменить переменными окружения
      SPRING_DATASOURCE_USERNAME: "${SPRING_DATASOURCE_USERNAME}"
      SPRING_DATASOURCE_PASSWORD: "${SPRING_DATASOURCE_PASSWORD}"
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL}" #jdbc:postgresql://${SPRING_DATASOURCE_HOST}:${SPRING_DATASOURCE_PORT}/${SPRING_DATASOURCE_DATABASE}
      SPRING_FLYWAY_BASELINE-ON-MIGRATE: "true"
      SPRING_DATA_MONGODB_URI: "${SPRING_DATA_MONGODB_URI}"
      VIRTUAL_HOST: sausage-store
    networks:
      - sausage-store
    restart: on-failure
    
  backend-report:
    build:
      context: backend-report
      dockerfile: Dockerfile
    container_name: sausage-backend-report
    environment:
      DB: "${SPRING_DATA_MONGODB_URI}"
      #"mongodb://std-022-024:Testusr1234@rc1a-sui0a7vifhdsk9b1.mdb.yandexcloud.net:27018/std-022-024?tls=true&tlsAllowInvalidCertificates=true"  #"${SPRING_DATA_MONGODB_URI}" #${REPORTS_MONGODB_URI}
    networks:
      - sausage-store
    restart: on-failure
    healthcheck:
      test: curl --fail -s http://localhost:8080/actuator/health
      interval: 30s
      timeout: 10s
      start_period: 20s
      retries: 6
    
  frontend:
    image: ${DOCKER_REGISTRY}/sausage-frontend:${FRONTEND_VERSION:-latest}
    container_name: sausage-store-frontend
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      DEFAULT_HOST: sausage-store
    ports:
      - "80:80"
    networks:
      - sausage-store
    restart: on-failure

networks:
  sausage-store: