# include:
#   - template: Security/SAST.gitlab-ci.yml

cache:
  paths:
    - frontend/dist/frontend

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - build
  # - test
  - notify
  - release
  - deploy

build-frontend-code-job:
  stage: build  
  only:
    changes:
      - frontend/*
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
  script:
    - echo "test"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/sausage-frontend:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true
  artifacts:
    paths:
      - frontend/dist/frontend

# sonarqube-frontend-sast:
#   stage: test
#   image: sonarsource/sonar-scanner-cli:latest
#   script:
#     - sonar-scanner -Dsonar.projectName="$SONAR_PROJECT_KEY" -Dsonar.sources=./frontend -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONT -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.qualitygate.wait=true
#   needs:
#     - build-frontend-code-job

telegram-notification-frontend:
  stage: notify
  # only:
  #   changes:
  #   - frontend/*
  script:
    - curl -s -X POST https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage 
      -d parse_mode=markdown
      -d chat_id=-1001771539978 
      -d text="std-022-024 собрал frontend [artefact]($CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-frontend-code-job)"
  needs:
    - build-frontend-code-job

# upload-frontend-release:
#    stage: release
#    needs:
#      - build-frontend-code-job
#    script:
#      - tar czvf sausage-store-${VERSION}.tar.gz frontend
#      - >
#       curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
#       --upload-file sausage-store-${VERSION}.tar.gz
#       ${NEXUS_REPO_URL}/${NEXUS_REPO_URL_FRONTEND}/${VERSION}/sausage-store-${VERSION}.tar.gz 
#    only:
#      changes:
#      - frontend/**/* 

release:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA latest

frontend-deploy:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client envsubst -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - envsubst < ./frontend/deploy.sh|ssh ${DEV_USER}@${DEV_HOST} 
  environment:
    name: $CI_COMMIT_REF_SLUG/frontend
    url: http://std-022-24.praktikum-services.tech/
